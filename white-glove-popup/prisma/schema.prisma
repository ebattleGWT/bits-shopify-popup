datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  id             String    @id
  shop           String
  state          String
  isOnline       Boolean   @default(false)
  scope          String?
  expires        DateTime?
  accessToken    String
  userId         BigInt?
  firstName      String?
  lastName       String?
  email          String?
  accountOwner   Boolean   @default(false)
  locale         String?
  collaborator   Boolean   @default(false)
  emailVerified  Boolean   @default(false)
}

model Popup {
  id          String    @id @default(uuid())
  name        String
  title       String
  content     String
  isEnabled   Boolean   @default(false)
  startDate   DateTime?
  endDate     DateTime?
  position    String    @default("CENTER") // TOP, BOTTOM, LEFT, RIGHT, CENTER
  theme       String    @default("LIGHT") // LIGHT, DARK, CUSTOM
  customCss   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  shop        String    // Store the Shopify shop domain
  
  // Targeting options
  showOnPages String?   // JSON array of page URLs
  deviceTypes String?   // JSON array: MOBILE, DESKTOP, TABLET
  countries   String?   // JSON array of country codes
  
  // Display settings
  delay       Int       @default(0) // Delay in seconds before showing
  frequency   String    @default("ALWAYS") // ALWAYS, ONCE, DAILY, WEEKLY
  animation   String    @default("FADE") // FADE, SLIDE, BOUNCE
  events    PopupEvent[]
  metrics   PopupMetrics?
}

model PopupEvent {
  id          String    @id @default(uuid())
  popupId     String
  popup       Popup     @relation(fields: [popupId], references: [id], onDelete: Cascade)
  eventType   String    // IMPRESSION, CLICK, CLOSE, CONVERSION
  createdAt   DateTime  @default(now())
  deviceType  String?   // MOBILE, DESKTOP, TABLET
  country     String?
  page        String?   // URL where the event occurred
  metadata    String?   // JSON string for additional data
  sessionId   String?   // To track unique visitors
  shop        String    // Store the Shopify shop domain

  @@index([popupId, eventType])
  @@index([createdAt])
  @@index([shop])
}

model PopupMetrics {
  id              String    @id @default(uuid())
  popupId         String    @unique
  popup           Popup     @relation(fields: [popupId], references: [id], onDelete: Cascade)
  impressions     Int       @default(0)
  clicks          Int       @default(0)
  conversions     Int       @default(0)
  closeCount      Int       @default(0)
  lastUpdated     DateTime  @updatedAt
  shop            String    // Store the Shopify shop domain

  // Engagement metrics
  avgTimeToClick  Float?    // Average time in seconds from impression to click
  avgTimeToClose  Float?    // Average time in seconds from impression to close
  bounceRate      Float?    // Percentage of users who close without interaction
  
  // Device breakdown (JSON strings)
  deviceBreakdown String?   // { "MOBILE": 40, "DESKTOP": 50, "TABLET": 10 }
  countryBreakdown String?  // { "US": 60, "CA": 20, "UK": 20 }
  pageBreakdown   String?   // { "/products": 40, "/cart": 30, "/": 30 }

  @@index([shop])
} 